version: '3.8'

services:
  db:
    image: postgres:13-alpine
    container_name: vpn_panel_db
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - vpn_network

  redis:
    image: redis:7-alpine
    container_name: vpn_panel_redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - vpn_network

  backend:
    build: .
    container_name: vpn-panel-backend
    restart: always
    env_file: .env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      REDIS_URL: redis://redis:6379/0
      UVICORN_HOST: 0.0.0.0
      UVICORN_PORT: 8000
      PYTHONPATH: /app
      PYTHONUNBUFFERED: 1
      PYTHONDONTWRITEBYTECODE: 1
    user: "1000:1000"  # Run as non-root user
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app:delegated
      - /app/backend/static
      - /var/log/vpn-panel:/var/log/vpn-panel
    command: >
      sh -c "mkdir -p /app/backend/static && 
      chown -R 1000:1000 /app /var/log/vpn-panel && 
      python -m uvicorn backend.app.main:app 
      --host 0.0.0.0 
      --port 8000 
      --workers 2 
      --log-level info"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - vpn_network

networks:
  vpn_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
